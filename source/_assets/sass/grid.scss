@keyframes rotating {
  from {
    transform: rotate(0deg) translate(-50%, -50%);
  }
  to {
    transform: rotate(360deg) translate(-50%, -50%);
  }
}

$grid-max: 5000;
$grid-space: 50;
$grid-columns: $grid-max / $grid-space;
$grid-spacing: ($grid-space * 1px);
$grid-color: #c3598c;
$grid-bg: #080808;
body {
  background: #000;
}
@include block('grid') {
  bottom:0;
  height: 100vh;
  left:0;
  overflow: hidden;
  position: absolute;
  width: 100vw;
  perspective: 200px;
  z-index: 2;
  @include element('space') {
    position: absolute;
    width: 100vw;
    height: 30vh;
    top:0;
    left:0;
    z-index: 1; 
    filter: blur(1px);
    overflow: hidden;
    &::after {
      content: ' ';
      display: block;
      width: 100%;
      padding-top:100%;
      position: absolute;
      top:50%;
      left:50%;
      transform: translate(-50%, -50%);
      transform-origin: 0 0;
      background-image: radial-gradient(circle, transparent 0%, rgba(0,0,0,1) 75%), url('/assets/images/space-sq.jpg');
      background-repeat: no-repeat;
      background-size: cover;
      background-position: center center;
      animation: rotating 720s ease 0 infinite;
    }
  }
  // Grid plane
  @include element('plane') {
    transform: rotateX(30deg) translateX(-50%) translateZ(-25px);
    position: absolute;
    bottom:0;
    left:50%;
    width: $grid-max * 1px;
    height: 110%;
    background: $grid-bg;
    z-index: 2;
    transition: transform 2s ease-in-out;
    opacity: 1;
    // Fade
    &::after {
      content: ' ';
      display: block;
      width: 100%;
      height: 150%;
      position: absolute;
      top:0;
      left:0;
      background-image: radial-gradient(transparent, #000);
      z-index: 3;
    }

  }
  // Lines
  @include element('line') {
    height: 1px;
    position: absolute;
    width: 1px;
    z-index: 2;
    // display: none;
    &::before, &::after {
      content: ' ';
      display: block;
      height: 100vh;
      left:0;
      position: absolute;
      top:0;
      width: 1px;
      background-color: $grid-color;
      box-shadow: 0 0 0.5px 0.25px #FFF, 0 0 1px 0.5px $grid-color;
    }
    // horizontal lines
    &::after {
      transform: rotate(-90deg);
      transform-origin: top;
      // height: calc(100vw + #{$grid-spacing*2});
      height: $grid-max * 1px;
    }

    // generate lines
    @for $i from 0 to $grid-columns {
      @include modifier($i) {
        left: ($i * $grid-spacing);
        &::after {
          // top: ($i * $grid-spacing);
          transform: rotate(-90deg) translate((-1 * $i * $grid-spacing), (-1 * $i * $grid-spacing))
        }
      }
    }

  }
  // .grid.is-hidden
  @include state('hidden') {
    .grid__plane {
      transform: rotateX(30deg) translateX(-50%) translateZ(-75px);
    }
  }
}