@keyframes rotating {
  from {
    transform: rotate(0deg) translate3d(-50%, -50%, 0);
  }
  to {
    transform: rotate(360deg) translate3d(-50%, -50%, 0);
  }
}

$grid-max: 5000;
$grid-space: 50;
$grid-columns: $grid-max / $grid-space;
$grid-spacing: ($grid-space * 1px);
// $grid-color: #c3598c;
$grid-color: $pink;
$grid-bg: $purple;

@include block('grid') {
  backface-visibility: hidden;
  bottom:0;
  // filter: blur(0px);
  filter: brightness(100%);
  height: 100%;
  left:0;
  overflow: hidden;
  perspective: 200px;
  position: fixed;
  transform: translateZ(0);
  transition: filter 0.2s ease;
  width: 100vw;
  will-change: filter;
  z-index: 2;
  @include element('space') {
    // filter: blur(1.5px);
    height: 45%;
    left:0;
    overflow: hidden;
    position: fixed;
    top:0;
    width: 100vw;
    z-index: 1; 
    &::after {
      animation: rotating 1080s ease infinite;
      background-image: radial-gradient(circle, transparent 0%, rgba(0,0,0,1) 75%), url('/assets/images/space-blur.jpg');
      background-position: center center;
      background-repeat: no-repeat;
      background-size: cover;
      content: ' ';
      display: block;
      left:50%;
      padding-top:100%;
      position: absolute;
      top:50%;
      transform-origin: 0 0;
      transform: rotate(0deg) translate3d(-50%, -50%, 0);
      width: 100%;
      will-change: transform;
    }
  }
  // Grid plane
  @include element('plane') {
    background: $grid-bg;
    bottom:0;
    height: 110%;
    left:50%;
    opacity: 1;
    position: absolute;
    transform: rotateX(30deg) rotateY(0deg) rotateZ(0deg) translate3d(-50%, 0, 0px);
    transition: transform 2s ease-in-out;
    width: $grid-max * 1px;
    will-change: transform;
    z-index: 2;
    // Fade
    &::after {
      background-image: radial-gradient(transparent, #000);
      content: ' ';
      display: block;
      height: 150%;
      left:0;
      position: absolute;
      top:0;
      width: 100%;
      z-index: 4;
    }

  }
  // Lines
  @include element('line') {
    height: 110%;
    position: absolute;
    width: 1px;
    z-index: 2;
    // display: none;
    &::before, &::after {
      background-color: lighten($grid-color, 2%);
      box-shadow: 0 0 2px 1px $grid-color;
      content: ' ';
      display: block;
      height: 100%;
      left:0;
      position: absolute;
      top:0;
      width: 1px;
    }
    // horizontal lines
    &::after {
      height: $grid-max * 1px;
      transform-origin: top;
      transform: rotate(-90deg);
    }

    // generate lines
    @for $i from 0 to $grid-columns {
      @include modifier($i) {
        left: ($i * $grid-spacing);
        &::after {
          // top: ($i * $grid-spacing);
          transform: rotate(-90deg) translate((-1 * $i * $grid-spacing), (-1 * $i * $grid-spacing))
        }
      }
    }

  }
  @include element('light') {
    background: lighten($grid-color, 10%);
    border-radius: 100%;
    box-shadow: 0 0 1px 3px lighten($grid-color, 5%);
    display: block;
    height: 1px;
    opacity: 1;
    position: absolute;
    transform: translate(0, 0);
    transition: transform 6s ease-in-out, opacity 0.75s ease;
    width: 1px;
    z-index: 3;
    // will-change: transform;

  }
  // .grid.is-hidden
  @include state('hidden') {
    .grid__plane {
      transform: rotateX(30deg) rotateY(0deg) rotateZ(0deg) translate3d(-50%, 0, -75px);
    }
  }
  @include state('loaded') {
    .grid__plane {
      transition: none;
    }
  }
}